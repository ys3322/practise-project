{"version":3,"file":"static/js/481.eb956379.chunk.js","mappings":"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","sources":["components/pagination/style.js","components/pagination/index.js","services/songs.js","pages/discover/c-pages/songs/store/actionCreator.js","pages/discover/c-pages/songs/c-cpms/songs-category/style.js","pages/discover/c-pages/songs/c-cpms/songs-category/index.js","pages/discover/c-pages/songs/c-cpms/songs-header/style.js","pages/discover/c-pages/songs/c-cpms/songs-header/index.js","pages/discover/c-pages/songs/c-cpms/songs-list/style.js","pages/discover/c-pages/songs/c-cpms/songs-list/index.js","pages/discover/c-pages/songs/style.js","pages/discover/c-pages/songs/index.js","utils/hanlde-data.js"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const PaginationWrapper = styled.div`\r\n  .pagination {\r\n    margin: 30px 0;\r\n    text-align: center;\r\n\r\n    .control {\r\n      width: 69px;\r\n      height: 24px;\r\n      line-height: 22px;\r\n      text-align: center;\r\n      border: 1px solid #ccc;\r\n      border-radius: 2px;\r\n      margin: 0 5px;\r\n      color: #333;\r\n\r\n      &:disabled {\r\n        color: #999;\r\n      }\r\n    }\r\n\r\n    .ant-pagination-item {\r\n      border: 1px solid #ccc !important;\r\n      margin: 0 5px;\r\n      border-radius: 3px;\r\n\r\n      a {\r\n        font-size: 12px;\r\n      }\r\n\r\n      &.ant-pagination-item-active {\r\n        background-color: #c20c0c;\r\n        border-color: #A2161B;\r\n        a {\r\n          color: #fff;\r\n        }\r\n      }\r\n    }\r\n    \r\n    .ant-pagination-disabled button{\r\n        background-color: #ccc;\r\n    }\r\n\r\n    .ant-pagination-item.ant-pagination-item-active {\r\n      background-color: #c20c0c;\r\n      color: #fff;\r\n      &:hover a{\r\n        color: #fff;\r\n      }\r\n    }\r\n    .ant-pagination-item {\r\n      border: 1px solid #ccc !important;\r\n      margin: 0 5px;\r\n      border-radius: 3px;\r\n    }\r\n    .ant-pagination-item.ant-pagination-item-active a {\r\n      color: #fff;\r\n    }\r\n    .ant-pagination-item:hover a {\r\n      color: #c20c0c;\r\n    }\r\n\r\n    .ant-pagination-disabled button {\r\n      background-color: #ccc;\r\n    }\r\n    .ant-pagination-jump-next .ant-pagination-item-link-icon{\r\n      color:#c20c0c;\r\n    }\r\n  }\r\n`","import React, { memo } from 'react';\r\n\r\nimport { Pagination } from 'antd';\r\nimport { PaginationWrapper } from './style';\r\n\r\nexport default memo(function HYPagination(props) {\r\n  const { currentPage, total, onPageChange } = props;\r\n\r\n  // render function\r\n  function itemRender(current, type, originalElement) {\r\n    if (type === 'prev') {\r\n      return <button className=\"control prev\"> &lt; 上一页</button>;\r\n    }\r\n    if (type === 'next') {\r\n      return <button className=\"control next\">下一页 &gt;</button>;\r\n    }\r\n    return originalElement;\r\n  }\r\n\r\n  return (\r\n    <PaginationWrapper>\r\n      <Pagination className=\"pagination\"\r\n        size=\"small\"\r\n        current={currentPage}\r\n        defaultCurrent={1}\r\n        total={total}\r\n        pageSize={35}\r\n        showSizeChanger={false}\r\n        itemRender={itemRender}\r\n        onChange={onPageChange} />\r\n    </PaginationWrapper>\r\n  )\r\n})\r\n","import request from './request'\r\n\r\n//获取所有的分类\r\nexport function getSongCategory() {\r\n  return request({\r\n    url: '/playlist/catlist'\r\n  })\r\n}\r\n// 获取当前分类下的playlists\r\nexport function getSongCategoryList(cat = \"全部\", offset = 0, limit = 35) {\r\n  return request({\r\n    url: '/top/playlist',\r\n    params: {\r\n      cat,\r\n      limit,\r\n      offset\r\n    }\r\n  })\r\n}","import * as actionTypes from './constants'\r\nimport { getSongCategoryList, getSongCategory } from \"@/services/songs\"\r\nimport {\r\n  handleSongsCategory\r\n} from '@/utils/hanlde-data'\r\n\r\nconst changeSongCategoryAction = (res) => ({\r\n  type: actionTypes.CHANGE_SONG_CATEGORY,\r\n  songCategory: res\r\n})\r\n\r\n\r\n// 获取歌曲分类\r\nexport const getSongCategoryAction = () => {\r\n  return (dispatch) => {\r\n    getSongCategory().then(res => {\r\n      console.log('getSongCategory==>', res);\r\n      res && res.code === 200 && dispatch(changeSongCategoryAction(handleSongsCategory(res)));\r\n    }).catch(err => {\r\n      console.error('getSongCategory==>', err);\r\n    })\r\n  }\r\n}\r\n\r\nconst changeSongListAction = (res) => ({\r\n  type: actionTypes.CHANGE_CATEGORY_DETAIL,\r\n  categoryDetail: res\r\n})\r\n\r\n\r\n// 获取当前分类的下的数据\r\nexport const getSongListAction = (page = 1) => {\r\n  return (dispatch, getState) => {\r\n\r\n    const name = getState().getIn(['songs', 'currentCategory']);\r\n\r\n    getSongCategoryList(name, (page - 1) * actionTypes.PAGE_NUMBER).then(res => {\r\n      console.log('getSongCategoryList==>', res);\r\n      res && res.code === 200 && dispatch(changeSongListAction(res));\r\n    }).catch(err => {\r\n      console.error('getSongCategoryList==>', err);\r\n    })\r\n  }\r\n}\r\nexport const changeCurrentCategoryAction = (name) => ({\r\n  type: actionTypes.CHANGE_CURRENT_CATEGORY,\r\n  currentCategory: name\r\n})\r\n","import styled from \"styled-components\";\r\n\r\nexport const CategoryWrapper = styled.div`\r\n  position: absolute;\r\n  z-index: 99;\r\n  top: 55px;\r\n  left: -25px;\r\n  width: 700px;\r\n  border: 1px solid #ccc;\r\n  background-color: #fefefe;\r\n  box-shadow: 0 0 10px 2px #d3d3d3;\r\n  border-radius: 5px;\r\n  padding-top: 10px;\r\n  \r\n  .arrow {\r\n    position: absolute;\r\n    top: -11px;\r\n    left: 110px;\r\n    width: 24px;\r\n    height: 11px;\r\n    background-position: -48px 0;\r\n  }\r\n\r\n  .all {\r\n    padding: 10px 25px;\r\n    border-bottom: 1px solid #e2e2e2;\r\n    a {\r\n      display: inline-block;\r\n      text-align: center;\r\n      width: 75px;\r\n      height: 26px;\r\n      line-height: 26px;\r\n      border: 1px solid #d3d3d3;\r\n      border-radius: 3px;\r\n      background-color: #fafafa;\r\n    }\r\n  }\r\n\r\n  .category {\r\n    padding-left: 25px;\r\n    dl {\r\n      display: flex;\r\n      align-items: flex-start;\r\n    }\r\n\r\n    dt {\r\n      display: inline-flex;\r\n      align-items: center;\r\n      padding: 15px 0 10px;\r\n      width: 70px;\r\n      text-align: center;\r\n\r\n      i {\r\n        display: inline-block;\r\n        width: 24px;\r\n        height: 24px;\r\n        background-position: -20px -735px;\r\n        margin-right: 8px;\r\n      }\r\n    }\r\n\r\n    dl.item1 {\r\n      i {\r\n        background-position: 0 -60px;\r\n      }\r\n    }\r\n\r\n    dl.item2 {\r\n      i {\r\n        background-position: 0 -88px;\r\n      }\r\n    }\r\n\r\n    dl.item3 {\r\n      i {\r\n        background-position: 0 -117px;\r\n      }\r\n    }\r\n\r\n    dl.item4 {\r\n      i {\r\n        background-position: 0 -141px;\r\n      }\r\n\r\n      dd {\r\n        padding-bottom: 25px;\r\n      }\r\n    }\r\n\r\n    dd {\r\n      padding-top: 18px;\r\n      padding-left: 15px;\r\n      flex: 1;\r\n      display: flex;\r\n      flex-wrap: wrap;\r\n      border-left: 1px solid #e2e2e2;\r\n\r\n      .item {\r\n        margin-bottom: 8px;\r\n      }\r\n\r\n      a {\r\n        color: #333;\r\n      }\r\n\r\n      .divider {\r\n        margin: 0 12px;\r\n        color: #e2e2e2;\r\n      }\r\n    }\r\n  }\r\n`","import React, { memo } from 'react';\r\nimport { useSelector, useDispatch, shallowEqual } from \"react-redux\";\r\n\r\nimport {\r\n  changeCurrentCategoryAction,\r\n  getSongListAction\r\n} from \"../../store/actionCreator\";\r\n\r\nimport {\r\n  CategoryWrapper\r\n} from \"./style\";\r\n\r\nexport default memo(function HYSongsCategory(props) {\r\n  // redux\r\n  // 拿到要展示的数据\r\n  const { songCategory = {} } = useSelector(state => ({\r\n    songCategory: state.getIn(['songs', 'songCategory'])\r\n  }), shallowEqual);\r\n  const dispatch = useDispatch();\r\n\r\n  // 点击item 选择类别\r\n  const { itemClick } = props;\r\n  function selectCategory(name) {\r\n    dispatch(changeCurrentCategoryAction(name));\r\n    // 请求当前类别的第一条数据\r\n    dispatch(getSongListAction(1));\r\n    itemClick && itemClick();\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <CategoryWrapper>\r\n      <div className=\"arrow sprite_icon\"></div>\r\n      <div className=\"all\">\r\n        <span className=\"link\" onClick={e => selectCategory(\"全部\")}>全部风格</span>\r\n      </div>\r\n      <div className=\"category\">\r\n        {\r\n          songCategory.map((item, index) => {\r\n            return (\r\n              <dl key={item.name} className={\"item\" + index}>\r\n                <dt>\r\n                  <i className=\"icon sprite_icon2\"></i>\r\n                  <span>{item.name}</span>\r\n                </dt>\r\n                <dd>\r\n                  {\r\n                    item.subs.map(sItem => {\r\n                      return (\r\n                        <div className=\"item\" key={sItem.name}>\r\n                          <span className=\"link\" onClick={e => selectCategory(sItem.name)}>{sItem.name}</span>\r\n                          <span className=\"divider\">|</span>\r\n                        </div>\r\n                      )\r\n                    })\r\n                  }\r\n                </dd>\r\n              </dl>\r\n            )\r\n          })\r\n        }\r\n      </div>\r\n    </CategoryWrapper>\r\n  )\r\n})\r\n","import styled from 'styled-components';\r\n\r\nexport const HeaderSwrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  height: 48px;\r\n  padding-bottom: 8px;\r\n  border-bottom: 2px solid #c20c0c;\r\n\r\n  .left{\r\n    display: flex;\r\n    align-items: center;\r\n    position: relative;\r\n    .title{\r\n      font-size: 24px;\r\n      font-weight: 400;\r\n      margin-right:16px;\r\n    }\r\n    .select{\r\n      display: inline-block;\r\n      background-position:right -100px;\r\n      padding-right: 5px;\r\n      height: 30px;\r\n      margin-top: 4px;\r\n      .select-btn {\r\n        display: inline-block;\r\n        height: 30px;\r\n        text-align: center;\r\n        line-height: 30px;\r\n        font-size: 12px;\r\n        padding: 0 7px 0 12px;\r\n        background-position:0 -59px;\r\n        color:#0c73c2;\r\n        .icon{\r\n          display: inline-block;\r\n          background-position: -70px -543px;\r\n          width: 12px;\r\n          height: 8px;\r\n          margin: 4px 0 0 4px;\r\n\r\n        }\r\n      }\r\n\r\n      &:hover{\r\n        background-position:right -182px;\r\n      }\r\n      &:hover .select-btn{\r\n        background-position: 0 -141px;\r\n      }\r\n\r\n      &:active{\r\n        background-position:right -264px;\r\n      }\r\n      &:active .select-btn{\r\n        background-position: 0 -223px;\r\n      }\r\n    }\r\n\r\n  }\r\n  \r\n  .hot{\r\n    width: 46px;\r\n    height: 29px;\r\n    background-position:0 0;\r\n    color: #fff;\r\n    border-radius: 3px;\r\n    text-align: center;\r\n    line-height: 28px;\r\n    border: 1px solid #aaa;\r\n  }\r\n\r\n`","import React, { memo, useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { getSongCategoryAction } from '../../store/actionCreator';\r\n\r\nimport YSongsCategory from '../songs-category'\r\n\r\nimport {\r\n  HeaderSwrapper\r\n} from './style'\r\n\r\nexport default memo(function YSongsHeader() {\r\n  // state相关的数据\r\n  const [isShowCategory, setShowCategory] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getSongCategoryAction());\r\n  }, [dispatch]);\r\n\r\n  //功能代码\r\n  function showCategory(e) {\r\n    e.preventDefault();\r\n    setShowCategory(!isShowCategory);\r\n  }\r\n  console.log('songs-header渲染.........');\r\n  return (\r\n    <HeaderSwrapper className=\"header\" >\r\n      <div className=\"left\">\r\n        <h2 className='title'>全部</h2>\r\n        <a href=\"#!\" onClick={e => showCategory(e)} className='select sprite_button'>\r\n          <span className='select-btn sprite_button'>\r\n            选择分类\r\n            <i className='sprite_icon2 icon'></i>\r\n          </span>\r\n        </a>\r\n        {isShowCategory ? <YSongsCategory itemClick={() => setShowCategory(false)} /> : null}\r\n      </div>\r\n      <a className=\"hot sprite_button2\" href='/'>\r\n        热门\r\n      </a>\r\n    </HeaderSwrapper >\r\n  )\r\n})\r\n","import styled from 'styled-components';\r\n\r\nexport const SongsListSwrapper = styled.div`\r\n  /* width: 1030px; */\r\n  margin: 30px 0 0 -50px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n\r\n  .list{\r\n    display: flex;\r\n    /* justify-content: space-between; */\r\n    flex-wrap: wrap;\r\n    .item{\r\n      width: 140px;\r\n      height: 188px;\r\n      justify-content: space-between;\r\n      margin: 0 0 30px 50px;\r\n      .top-img{\r\n        position: relative;\r\n        display: inline-block;\r\n        width: 140px;\r\n        height:140px ;\r\n        .cover{\r\n          position: absolute;\r\n          display: inline-block;\r\n          width: 140px;\r\n          height: 140px;\r\n          background-position: 0 0;\r\n        }\r\n        img{\r\n          width: 140px;\r\n          height: 140px;\r\n        }\r\n        .info{\r\n          display: flex;\r\n          justify-content: space-between;\r\n          align-items: center;\r\n          position: absolute;\r\n          right: 0;\r\n          left: 0;\r\n          bottom:0;\r\n          height: 27px;\r\n          padding: 0 8px;\r\n          cursor: default;\r\n          background-position: 0 -537px;\r\n          color: #cccccc;\r\n          .headset{\r\n            display: inline-block;\r\n            width: 14px;\r\n            height: 11px;\r\n            background-position: 0 -24px;\r\n            margin-right: 6px;\r\n          }\r\n          .play{\r\n            display: inline-block;\r\n            width: 16px;\r\n            height: 17px;\r\n            cursor: pointer;\r\n            background-position: 0 0;\r\n            &:hover{\r\n              background-position: 0 -60px;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      \r\n      .info{\r\n        width: 140px;\r\n        a{\r\n          display: inline-block;\r\n          width: 140px;\r\n        }\r\n        .name{\r\n          font-size: 14px;\r\n          margin-top: 4px;\r\n          color: #000000;\r\n        }\r\n        .desc{\r\n          color:#666666;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`","// 第三方库\r\nimport React, { memo, useEffect, useState } from 'react'\r\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\r\n// 工具类\r\nimport { getSongListAction } from '../../store/actionCreator';\r\n\r\nimport YPagination from '@/components/pagination';\r\nimport {\r\n  getSizeImage\r\n} from '@/utils/format-utils'\r\n// 组件类\r\nimport {\r\n  SongsListSwrapper\r\n} from './style'\r\n\r\n\r\n\r\nexport default memo(function YSongsList() {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  const { categoryDetail: { playlists = [], total }, currentCategory } = useSelector(state => {\r\n    return {\r\n      categoryDetail: state.getIn(['songs', 'categoryDetail']),\r\n      currentCategory: state.getIn(['songs', 'currentCategory'])\r\n    }\r\n  }, shallowEqual);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  // 当分类发生变化的时候，下面的指示器，默认显示第一页的数据\r\n  useEffect(() => {\r\n    setCurrentPage(1);\r\n  }, [currentCategory]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getSongListAction());\r\n  }, [dispatch]);\r\n  // console.log('songs-list渲染.........');\r\n\r\n  function onPageChange(page, pageSize) {\r\n    setCurrentPage(page);\r\n    dispatch(getSongListAction(page));\r\n  }\r\n  return (\r\n    <SongsListSwrapper className=\"songs-list\">\r\n      <div className=\"list\">\r\n        {\r\n          playlists.map(item => {\r\n            return (\r\n              <div key={item.id} className='item'>\r\n                <a href='/' className='top-img'>\r\n                  <span className='cover sprite_covor'></span>\r\n                  <img src={getSizeImage(item.coverImgUrl, 140)} alt=\"\" />\r\n                  <div className=\"info sprite_covor\">\r\n                    <span>\r\n                      <i className='sprite_icon headset'></i>\r\n                      <span>3088万</span>\r\n                    </span>\r\n                    <i className='sprite_icon play'></i>\r\n                  </div>\r\n                </a>\r\n                <div className=\"info\">\r\n                  <p>\r\n                    <a href='/' className=\"name text-nowrap\">{item.name}</a>\r\n                  </p>\r\n                  <p>\r\n                    <a href='/' className=\"desc text-nowrap\">by {item.description}</a>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            )\r\n          })\r\n        }\r\n      </div>\r\n\r\n\r\n      <YPagination currentPage={currentPage}\r\n        defaultCurrent={1}\r\n        size=\"small\"\r\n        total={total}\r\n        pageSize={35}\r\n        onPageChange={onPageChange} />\r\n    </SongsListSwrapper>\r\n  )\r\n})\r\n","import styled from 'styled-components';\r\n\r\nexport const SongsSwrapper = styled.div`\r\n  padding: 40px;\r\n\r\n`","import React, { memo } from 'react'\r\n\r\nimport YSongsHeader from './c-cpms/songs-header';\r\nimport YSongsList from './c-cpms/songs-list';\r\n\r\nimport {\r\n  SongsSwrapper\r\n} from './style'\r\n\r\nexport default memo(function YSongs() {\r\n\r\n  return (\r\n    <SongsSwrapper className='wrap-v2'>\r\n      <YSongsHeader />\r\n      <YSongsList />\r\n    </SongsSwrapper>\r\n  )\r\n})\r\n","export function handleSongsCategory(data) {\r\n  // 1.获取所有的类别\r\n  const category = data.categories;\r\n\r\n  // 2.创建类别数据结构\r\n  const categoryData = Object.entries(category).map(([key, value]) => {\r\n    return {\r\n      name: value,\r\n      subs: []\r\n    }\r\n  })\r\n\r\n  // 3.将subs添加到对应的类别中\r\n  for (let item of data.sub) {\r\n    categoryData[item.category].subs.push(item);\r\n  }\r\n\r\n  return categoryData;\r\n}\r\n\r\n\r\n// 获取歌手字母类别\r\nexport function generateSingerAlpha() {\r\n  var alphabets = [\"-1\"];\r\n  var start = 'A'.charCodeAt(0);\r\n  var last = 'Z'.charCodeAt(0);\r\n  for (var i = start; i <= last; ++i) {\r\n    alphabets.push(String.fromCharCode(i));\r\n  }\r\n\r\n  alphabets.push(\"0\");\r\n\r\n  return alphabets;\r\n}\r\n\r\nexport const singerAlphas = generateSingerAlpha();\r\n\r\n"],"names":["PaginationWrapper","styled","memo","props","currentPage","total","onPageChange","className","size","current","defaultCurrent","pageSize","showSizeChanger","itemRender","type","originalElement","onChange","getSongCategoryList","cat","offset","limit","request","url","params","getSongCategoryAction","dispatch","then","res","console","log","code","actionTypes","songCategory","changeSongCategoryAction","handleSongsCategory","catch","err","error","changeSongListAction","categoryDetail","getSongListAction","page","getState","getIn","CategoryWrapper","useSelector","state","shallowEqual","useDispatch","itemClick","selectCategory","name","currentCategory","changeCurrentCategoryAction","onClick","e","map","item","index","subs","sItem","HeaderSwrapper","useState","isShowCategory","setShowCategory","useEffect","href","preventDefault","showCategory","SongsListSwrapper","setCurrentPage","playlists","src","getSizeImage","coverImgUrl","alt","description","id","SongsSwrapper","data","category","categories","categoryData","Object","entries","sub","push","singerAlphas","alphabets","start","charCodeAt","last","i","String","fromCharCode","generateSingerAlpha"],"sourceRoot":""}