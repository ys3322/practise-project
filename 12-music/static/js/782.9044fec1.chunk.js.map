{"version":3,"file":"static/js/782.9044fec1.chunk.js","mappings":"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","sources":["components/theme-header-normal/style.js","components/theme-header-normal/index.js","pages/discover/c-pages/artist/c-cpns/artist-category/style.js","pages/discover/c-pages/artist/store/actionCreators.js","services/artist.js","pages/discover/c-pages/artist/c-cpns/artist-category/index.js","pages/discover/c-pages/artist/c-cpns/artist-list/c-cpns/alpha-list/style.js","pages/discover/c-pages/artist/c-cpns/artist-list/c-cpns/alpha-list/index.js","pages/discover/c-pages/artist/c-cpns/artist-list/c-cpns/artist-item/style.js","pages/discover/c-pages/artist/c-cpns/artist-list/c-cpns/artist-item/index.js","pages/discover/c-pages/artist/c-cpns/artist-list/style.js","pages/discover/c-pages/artist/c-cpns/artist-list/index.js","pages/discover/c-pages/artist/style.js","pages/discover/c-pages/artist/index.js","utils/hanlde-data.js"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const HeaderWrapper = styled.div`\r\n  display: flex;\r\n  padding-bottom: 5px;\r\n  border-bottom: 2px solid #c20c0c;\r\n  font-family: \"Microsoft Yahei\", Arial, Helvetica, sans-serif;\r\n  font-size: 24px;\r\n`\r\n","import React, {memo} from 'react';\r\n\r\nimport {\r\n  HeaderWrapper\r\n} from \"./style\";\r\n\r\nexport default memo(function HYThemeHeaderNormal(props) {\r\n  const { title, rightSlot } = props;\r\n\r\n  return (\r\n    <HeaderWrapper>\r\n      <div className=\"title\">{title}</div>\r\n      <div className=\"right\">\r\n        {rightSlot}\r\n      </div>\r\n    </HeaderWrapper>\r\n  )\r\n})\r\n","import styled from 'styled-components';\r\n\r\nexport const CategoryWrapper = styled.div`\r\n  width: 180px;\r\n  padding: 50px 10px 40px;\r\n  border: 1px solid #d3d3d3;\r\n  border-width: 0 1px;\r\n\r\n  background-color: #fafafa;\r\n\r\n  .section {\r\n    border-bottom: 1px solid #d3d3d3;\r\n    padding: 10px 0;\r\n\r\n    &:last-of-type {\r\n      border-bottom: none;\r\n    }\r\n\r\n    .title {\r\n      height: 25px;\r\n      padding-left: 14px;\r\n      font-size: 16px;\r\n      margin-bottom: 5px;\r\n      font-family: \"Microsoft Yahei\";\r\n    }\r\n  }\r\n\r\n  \r\n`\r\n\r\nexport const CategoryItem = styled.div`\r\n  width: 160px;\r\n  color: #333;\r\n  height: 29px;\r\n  line-height: 29px;\r\n  margin-bottom: 2px;\r\n  cursor: pointer;\r\n\r\n  &.active {\r\n    span {\r\n      color: red;\r\n      background-position: 0 0;\r\n    }\r\n  }\r\n\r\n  span {\r\n    display: inline-block;\r\n    width: 160px;\r\n    padding-left: 27px;\r\n    background: url(${require(\"@/assets/img/singer_sprite.png\")}) no-repeat 0 -30px;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n      text-decoration: underline;\r\n    }\r\n`","import * as actionTypes from './constants';\r\n\r\nimport { getArtistList } from '@/services/artist';\r\n\r\nconst changeArtistListAction = (artistList) => ({\r\n  type: actionTypes.CHANGE_ARTIST_LIST,\r\n  artistList\r\n})\r\n\r\nexport const changeCurrentAreaAction = (area) => ({\r\n  type: actionTypes.CHANGE_CURRENT_AREA,\r\n  currentArea: area\r\n});\r\n\r\nexport const changeCurrentTypeAction = (type) => ({\r\n  type: actionTypes.CHANGE_CURRENT_TYPE,\r\n  currentType: type\r\n});\r\n\r\nexport const getArtistListAction = (area, type, alpha) => {\r\n  return dispatch => {\r\n    getArtistList(area, type, alpha).then(res => {\r\n      // console.log('getArtistListAction==>',res);\r\n      dispatch(changeArtistListAction(res.artists))\r\n    })\r\n  }\r\n}","import request from './request';\r\n\r\nexport function getArtistList(area, type, initial) {\r\n  let url = \"/artist/list\";\r\n  let params = { limit: 100 }\r\n  if (area === -1 && type === 1) {\r\n    url = \"/top/artists\"\r\n  } else {\r\n    if (area === -1) {\r\n      params = { limit: 100, cat: 5001 }\r\n    } else {\r\n      params = {\r\n        type,\r\n        area,\r\n        initial,\r\n        limit: 100\r\n      }\r\n    }\r\n  }\r\n\r\n  // console.log(\"url:\", url, \"params:\", params);\r\n\r\n  return request({\r\n    url,\r\n    params\r\n  })\r\n}\r\n\r\n","import React, { memo } from 'react';\r\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\r\nimport classNames from 'classnames';\r\n\r\nimport { artistCategories } from '@/services/local-data';\r\n\r\nimport { CategoryWrapper, CategoryItem } from './style';\r\nimport { changeCurrentAreaAction, changeCurrentTypeAction } from '../../store/actionCreators';\r\n\r\nexport default memo(function YArtistCategory(props) {\r\n\r\n  // redux hooks\r\n  const { currentArea, currentType } = useSelector(state => ({\r\n    currentArea: state.getIn([\"artist\", \"currentArea\"]),\r\n    currentType: state.getIn([\"artist\", \"currentType\"])\r\n  }), shallowEqual);\r\n  const dispatch = useDispatch();\r\n\r\n  // handle function\r\n  const selectArtist = (area, type) => {\r\n    dispatch(changeCurrentAreaAction(area));\r\n    dispatch(changeCurrentTypeAction(type));\r\n  }\r\n\r\n  // render jsx\r\n  const renderArtist = (artists, area) => {\r\n    return (\r\n      <div>\r\n        {\r\n          artists.map((item, index) => {\r\n            const isSelect = currentArea === area && currentType.type === item.type;\r\n            return (\r\n              <CategoryItem key={item.name}\r\n                className={classNames({ \"active\": isSelect })}>\r\n                <span onClick={e => selectArtist(area, item)}>{item.name}</span>\r\n              </CategoryItem>\r\n            )\r\n          })\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <CategoryWrapper>\r\n      {\r\n        artistCategories.map((item, index) => {\r\n          return (\r\n            <div className=\"section\" key={item.area}>\r\n              <h2 className=\"title\">{item.title}</h2>\r\n              {renderArtist(item.artists, item.area)}\r\n            </div>\r\n          )\r\n        })\r\n      }\r\n    </CategoryWrapper>\r\n  )\r\n})\r\n","import styled from 'styled-components';\r\n\r\nexport const AlphaListWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-top: ${props => props.hasTop ? \"20px\": 0};\r\n\r\n  .item {\r\n    padding: 1px 4px;\r\n    border-radius: 3px;\r\n    span {\r\n      font-size: 14px;\r\n      color: #333;\r\n      cursor: pointer;\r\n    }\r\n\r\n    span:hover {\r\n      text-decoration: underline;\r\n    }\r\n  }\r\n\r\n  .active {\r\n    background-color: #c20c0c;\r\n    span {\r\n      color: #fff;\r\n    }\r\n  }\r\n`","import React, { memo, useState, useEffect } from 'react';\r\nimport { useSelector, shallowEqual, useDispatch } from 'react-redux';\r\nimport classNames from 'classnames';\r\n\r\nimport { singerAlphas } from '@/utils/hanlde-data';\r\nimport { getArtistListAction } from '../../../../store/actionCreators';\r\n\r\nimport {\r\n  AlphaListWrapper\r\n} from './style';\r\n\r\nexport default memo(function HYAlphaList() {\r\n  const [currentAlpha, setCurrentAlpha] = useState(\"-1\");\r\n\r\n  const { currentType, currentArea } = useSelector(state => ({\r\n    currentType: state.getIn([\"artist\", \"currentType\"]),\r\n    currentArea: state.getIn([\"artist\", \"currentArea\"])\r\n  }), shallowEqual);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    setCurrentAlpha(\"-1\");\r\n  }, [currentType, currentArea]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getArtistListAction(currentArea, currentType.type, currentAlpha));\r\n  }, [currentAlpha, currentType, currentArea, dispatch]);\r\n\r\n  return (\r\n    <AlphaListWrapper hasTop={currentArea !== -1}>\r\n      {\r\n        currentArea !== -1 && singerAlphas.map((item, index) => {\r\n          const isActive = currentAlpha === item;\r\n          if (item === \"0\") item = \"其他\";\r\n          if (item === \"-1\") item = \"热门\";\r\n          return (\r\n            <div key={item}\r\n              className={classNames(\"item\", { \"active\": isActive })}>\r\n              <span onClick={e => setCurrentAlpha(item)}>{item.toUpperCase()}</span>\r\n            </div>\r\n          )\r\n        })\r\n      }\r\n    </AlphaListWrapper>\r\n  )\r\n})\r\n","import styled from 'styled-components';\r\n\r\nexport const ItemWrapper = styled.div`\r\n  width: 130px;\r\n  margin-top: 15px;\r\n\r\n  .image {\r\n    img {\r\n      width: 130px;\r\n      height: 130px;\r\n    }\r\n  }\r\n\r\n  .info {\r\n    margin: 10px 0;\r\n    display: flex;\r\n    justify-content: space-between;\r\n\r\n    .name {\r\n      cursor: pointer;\r\n      \r\n      &:hover {\r\n        color: red;\r\n        text-decoration: underline;\r\n      }\r\n    }\r\n\r\n    .icon {\r\n      display: inline-block;\r\n      width: 17px;\r\n      height: 18px;\r\n      background-position: 0 -740px;\r\n    }\r\n  }\r\n`","import React, { memo } from 'react';\r\n\r\nimport { getSizeImage } from '@/utils/format-utils';\r\n\r\nimport { ItemWrapper } from './style';\r\n\r\nexport default memo(function YArtistItemV1(props) {\r\n  const { info, index } = props;\r\n\r\n  return (\r\n    <ItemWrapper>\r\n      {\r\n        index < 10 && (\r\n          <div className=\"image\">\r\n            <img src={getSizeImage(info.img1v1Url, 130)} alt=\"\" />\r\n          </div>\r\n        )\r\n      }\r\n      <div className=\"info\">\r\n        <span className=\"name\">{info.name}</span>\r\n        <i className=\"sprite_icon2 icon\"></i>\r\n      </div>\r\n    </ItemWrapper>\r\n  )\r\n})\r\n","import styled from 'styled-components';\r\n\r\nexport const ArtistListWrapper = styled.div`\r\n  flex: 1;\r\n  padding: 40px;\r\n\r\n  .artist-list {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: space-between;\r\n\r\n    padding: 5px 0 40px;\r\n  }\r\n`","import React, { memo } from 'react';\r\nimport { useSelector, shallowEqual } from 'react-redux';\r\n\r\n\r\nimport YThemeHeaderNormal from '@/components/theme-header-normal';\r\nimport YAlphaList from './c-cpns/alpha-list';\r\nimport YArtistItem from './c-cpns/artist-item';\r\nimport {\r\n  ArtistListWrapper\r\n} from './style';\r\n\r\nexport default memo(function YArtistList() {\r\n  // redux hooks\r\n  const { currentType, artistList } = useSelector(state => ({\r\n    currentType: state.getIn([\"artist\", \"currentType\"]),\r\n    artistList: state.getIn([\"artist\", \"artistList\"])\r\n  }), shallowEqual);\r\n\r\n  return (\r\n    <ArtistListWrapper>\r\n      <YThemeHeaderNormal title={currentType.name} />\r\n      <YAlphaList />\r\n      <div className=\"artist-list\">\r\n        {\r\n          artistList.map((item, index) => {\r\n            return <YArtistItem key={item.id} index={index} info={item} />\r\n          })\r\n        }\r\n      </div>\r\n    </ArtistListWrapper>\r\n  )\r\n})\r\n","import styled from 'styled-components';\r\n\r\nexport const YArtistWrapper = styled.div`\r\n  .content {\r\n    display: flex;\r\n    background-color: #fff;\r\n  }\r\n`","import React, { memo } from 'react';\r\n\r\nimport YArtistCategory from './c-cpns/artist-category';\r\nimport YArtistList from './c-cpns/artist-list';\r\nimport { YArtistWrapper } from './style';\r\n\r\nexport default memo(function YArtist() {\r\n  return (\r\n    <YArtistWrapper>\r\n      <div className=\"content wrap-v2\">\r\n        <YArtistCategory />\r\n        <YArtistList />\r\n      </div>\r\n    </YArtistWrapper>\r\n  )\r\n})\r\n","export function handleSongsCategory(data) {\r\n  // 1.获取所有的类别\r\n  const category = data.categories;\r\n\r\n  // 2.创建类别数据结构\r\n  const categoryData = Object.entries(category).map(([key, value]) => {\r\n    return {\r\n      name: value,\r\n      subs: []\r\n    }\r\n  })\r\n\r\n  // 3.将subs添加到对应的类别中\r\n  for (let item of data.sub) {\r\n    categoryData[item.category].subs.push(item);\r\n  }\r\n\r\n  return categoryData;\r\n}\r\n\r\n\r\n// 获取歌手字母类别\r\nexport function generateSingerAlpha() {\r\n  var alphabets = [\"-1\"];\r\n  var start = 'A'.charCodeAt(0);\r\n  var last = 'Z'.charCodeAt(0);\r\n  for (var i = start; i <= last; ++i) {\r\n    alphabets.push(String.fromCharCode(i));\r\n  }\r\n\r\n  alphabets.push(\"0\");\r\n\r\n  return alphabets;\r\n}\r\n\r\nexport const singerAlphas = generateSingerAlpha();\r\n\r\n"],"names":["HeaderWrapper","styled","memo","props","title","rightSlot","className","CategoryWrapper","CategoryItem","require","getArtistListAction","area","type","alpha","dispatch","initial","url","params","limit","cat","request","getArtistList","then","res","artistList","artists","actionTypes","useSelector","state","currentArea","getIn","currentType","shallowEqual","useDispatch","selectArtist","changeCurrentAreaAction","changeCurrentTypeAction","artistCategories","item","index","map","isSelect","classNames","onClick","e","name","AlphaListWrapper","hasTop","useState","currentAlpha","setCurrentAlpha","useEffect","singerAlphas","isActive","toUpperCase","ItemWrapper","info","src","getSizeImage","img1v1Url","alt","ArtistListWrapper","id","YArtistWrapper","handleSongsCategory","data","category","categories","categoryData","Object","entries","subs","sub","push","alphabets","start","charCodeAt","last","i","String","fromCharCode","generateSingerAlpha"],"sourceRoot":""}