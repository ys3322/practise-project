{"version":3,"file":"static/js/616.19322e3d.chunk.js","mappings":"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","sources":["components/song-operation-bar/style.js","components/song-operation-bar/index.js","pages/player/c-cpns/player-info/style.js","pages/player/c-cpns/player-info/index.js","pages/player/c-cpns/player-comment/index.js","components/theme-header-player/style.js","components/theme-header-player/index.js","pages/player/c-cpns/player-songs/style.js","pages/player/c-cpns/player-songs/index.js","pages/player/c-cpns/player-relevant/style.js","pages/player/c-cpns/player-relevant/index.js","pages/player/style.js","pages/player/index.js"],"sourcesContent":["import styled from 'styled-components'\r\n\r\nexport const SongOperationBarWrapper = styled.div`\r\n\r\n&.operation{\r\n    display: flex;\r\n    span, i{\r\n        height: 31px;\r\n    }\r\n    .item{\r\n      display: inline-block;\r\n      height: 31px;\r\n      margin-right: 10px;\r\n    }\r\n    /* 到底有什么难的？慌里慌张 */\r\n    /* 播放与添加样式 */\r\n    .play-add{\r\n      display: flex;\r\n      align-items: center;\r\n      background-color: antiquewhite;\r\n      background-image: url(${require('@/assets/img/sprite_button.png')});\r\n      background-position: 0 -387px;\r\n      margin-right: 5px;\r\n      .play{\r\n        display: flex;\r\n        align-items: center;\r\n        padding: 0 8px;\r\n        font-size: 12px;\r\n        span.play-text{\r\n          line-height: 31px;\r\n          color: #fff;\r\n        }\r\n        i.play-icon{\r\n          display: inline-block;\r\n          width: 20px;\r\n          height: 18px;\r\n          background-image: url(${require('@/assets/img/sprite_button.png')});\r\n          background-position: 0 -1622px;\r\n          margin: -2px 2px 0;\r\n        }\r\n      }\r\n      .add{\r\n        display: inline-block;\r\n        height: 31px;\r\n        width: 31px;\r\n        background-image: url(${require('@/assets/img/sprite_button.png')});\r\n        background-position: 0 -1588px;\r\n        text-indent: -9999px;\r\n      }\r\n    }\r\n    /* 订阅 分享 下载 收藏 评论共用样式 */\r\n    .icon-btn{\r\n      display: inline-block;\r\n      height: 31px;\r\n      margin-right: 6px;\r\n      padding-right: 4px;\r\n      background-image: url(${require('@/assets/img/sprite_button.png')});\r\n      background-position: right -1020px;\r\n      .icon{\r\n        display: inline-block;\r\n        line-height: 31px;\r\n        padding: 0 7px 0 28px;\r\n        background-image: url(${require('@/assets/img/sprite_button.png')});\r\n        background-position: 0 -977px;\r\n        font-family: simsun;\r\n      }\r\n    }\r\n\r\n    .share-icon.icon{\r\n      background-position: 0 -1225px;\r\n    }\r\n\r\n    .download-icon.icon{\r\n      background-position: 0 -2761px;\r\n    }\r\n\r\n    .comment-icon.icon{\r\n      background-position: 0 -1465px;\r\n    }\r\n  }\r\n \r\n`","import React, { memo } from 'react'\r\nimport {\r\n  SongOperationBarWrapper\r\n} from './style'\r\n\r\nexport default memo(function YSongOperationBar(props) {\r\n  // const { coverImgUrl, name, updateTime, subscribedCount,\r\n  //   shareCount, commentCount, playCount, trackCount } = props.info;\r\n  const { subscribedCount,\r\n    shareCount, commentCount } = props.info ? props.info : props;\r\n  return (\r\n    <SongOperationBarWrapper className=\"operation\">\r\n      {/* 播放与添加 */}\r\n      <span className='item play-add'>\r\n        <span className='play'>\r\n          <i className='play-icon'></i>\r\n          <span className='play-text'>播放</span>\r\n        </span>\r\n        <span className='add'>+</span>\r\n      </span>\r\n      {/* 订阅 */}\r\n      <span className='item subscribed icon-btn'>\r\n        <i className='subscribed-icon icon'> ({subscribedCount})</i>\r\n      </span>\r\n\r\n      {/* 分享 */}\r\n      <span className='item share icon-btn'>\r\n        <i className='share-icon icon'> ({shareCount})</i>\r\n      </span>\r\n\r\n      {/* 下载 */}\r\n      <span className='item download icon-btn'>\r\n        <i className='download-icon icon'>下载</i>\r\n      </span>\r\n\r\n      {/* 评论 */}\r\n      <span className='item comment icon-btn'>\r\n        <i className='comment-icon icon'> ({commentCount})</i>\r\n      </span>\r\n\r\n\r\n    </SongOperationBarWrapper>\r\n  )\r\n})\r\n","import styled from 'styled-components';\r\n\r\nexport const InfoWrapper = styled.div`\r\n  display: flex;\r\n  padding: 47px 30px 40px 39px;\r\n`\r\n\r\nexport const InfoLeft = styled.div`\r\n  width: 206px;\r\n\r\n  .image {\r\n    display: flex;\r\n    position: relative;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 198px;\r\n    height: 198px;\r\n\r\n    .cover {\r\n      background-position: -140px -580px;\r\n      width: 206px;\r\n      height: 205px;\r\n      top: -4px;\r\n      left: -4px;\r\n    }\r\n  }\r\n\r\n  .link {\r\n    margin: 20px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    i {\r\n      display: inline-block;\r\n      width: 16px;\r\n      height: 16px;\r\n      background-position: -34px -863px;\r\n    }\r\n\r\n    a {\r\n      color: #0c73c2;\r\n      text-decoration: underline;\r\n    }\r\n  }\r\n`\r\n\r\nexport const InfoRight = styled.div`\r\n  width: 414px;\r\n  margin-left: 20px;\r\n\r\n  .header {\r\n    display: flex;\r\n    align-items: center;\r\n    i {\r\n      display: inline-block;\r\n      width: 54px;\r\n      height: 24px;\r\n      background-position: 0 -463px;\r\n    }\r\n\r\n    .title {\r\n      font-size: 24px;\r\n      font-weight: 400;\r\n      margin-left: 10px;\r\n    }\r\n  }\r\n\r\n  .singer, .album {\r\n    margin: 10px;\r\n\r\n    a {\r\n      color: #0c73c2;\r\n    }\r\n  }\r\n\r\n  .lyric {\r\n    padding: 30px 0 50px;\r\n\r\n    .lyric-info {\r\n      .text {\r\n        margin: 6px 0;\r\n      }\r\n    }\r\n\r\n    .lyric-control {\r\n      position: relative;\r\n      color: #0c73c2;\r\n      background-color: #fff;\r\n      text-decoration: underline;\r\n      cursor: pointer;\r\n\r\n      i {\r\n        position: absolute;\r\n        width: 11px;\r\n        height: 8px;\r\n        right: -8px;\r\n        top: 2px;\r\n        background-position: ${props => props.isSpread ? \"-45px\": \"-65px\"} -520px;\r\n      }\r\n    }\r\n  }\r\n`","import React, { memo, useState } from 'react';\r\nimport { useSelector, shallowEqual } from 'react-redux';\r\n\r\nimport { getSizeImage } from '@/utils/format-utils';\r\n\r\nimport HYSongOperationBar from '@/components/song-operation-bar';\r\nimport {\r\n  InfoWrapper,\r\n  InfoLeft,\r\n  InfoRight\r\n} from './style';\r\n\r\nexport default memo(function HYPlayerInfo() {\r\n  // props and hooks\r\n  const [isSpread, setIsSpread] = useState(false);\r\n\r\n  // redux hooks\r\n  const { currentSong = {}, lyricList = [] } = useSelector(state => ({\r\n    currentSong: state.getIn([\"player\", \"currentSong\"]),\r\n    lyricList: state.getIn([\"player\", \"lyricList\"])\r\n  }), shallowEqual);\r\n\r\n  // handle code\r\n  const totalLyricCount = isSpread ? lyricList.length : 13;\r\n  const picUrl = currentSong.al ? currentSong.al.picUrl : '';\r\n  const singerName = currentSong.ar && currentSong.ar[0] ? currentSong.ar[0].name : '';\r\n  const albumName = currentSong.al ? currentSong.al.name : '';\r\n\r\n  return (\r\n    <InfoWrapper>\r\n      <InfoLeft>\r\n        <div className=\"image\">\r\n          <img src={getSizeImage(picUrl, 130)} alt=\"\" />\r\n          <span className=\"cover image_cover\"></span>\r\n        </div>\r\n        <div className=\"link\">\r\n          <i className=\"sprite_icon2\"></i>\r\n          <a href=\"#/\">生成外联播放器</a>\r\n        </div>\r\n      </InfoLeft>\r\n      <InfoRight isSpread={isSpread}>\r\n        <div className=\"header\">\r\n          <i className=\"sprite_icon2\"></i>\r\n          <h3 className=\"title\">{currentSong.name}</h3>\r\n        </div>\r\n        <div className=\"singer\">\r\n          <span className=\"label\">歌手：</span>\r\n          <a href=\"/#\" className=\"name\">{singerName}</a>\r\n        </div>\r\n        <div className=\"album\">\r\n          <span className=\"label\">所属专辑：</span>\r\n          <a href=\"/#\" className=\"name\">{albumName}</a>\r\n        </div>\r\n\r\n        <HYSongOperationBar subscribedCount=\"9858\"\r\n          shareCount=\"8923\"\r\n          commentCount=\"366\" />\r\n\r\n        <div className=\"lyric\">\r\n          <div className=\"lyric-info\">\r\n            {\r\n              lyricList.slice(0, totalLyricCount).map((item, index) => {\r\n                return <p key={item.time} className=\"text\">{item.content}</p>\r\n              })\r\n            }\r\n          </div>\r\n          <button className=\"lyric-control\"\r\n            onClick={e => setIsSpread(!isSpread)}>\r\n            {isSpread ? \"收起\" : \"展开\"}\r\n            <i className=\"sprite_icon2\"></i>\r\n          </button>\r\n        </div>\r\n      </InfoRight>\r\n    </InfoWrapper>\r\n  )\r\n})\r\n","import React, { memo } from 'react'\r\n\r\nexport default memo(function HYPlayerComment() {\r\n  return (\r\n    <div>\r\n      \r\n    </div>\r\n  )\r\n})\r\n","import styled from 'styled-components';\r\n\r\nexport const HeaderWrapper = styled.div`\r\n  h3 {\r\n    height: 23px;\r\n    margin-bottom: 20px;\r\n    border-bottom: 1px solid #ccc;\r\n    font-size: 12px;\r\n    font-weight: 700;\r\n    color: #333;\r\n  }\r\n`","import React, { memo } from 'react';\r\n\r\nimport { HeaderWrapper } from './style';\r\n\r\nexport default memo(function HYThemeHeaderPlayer(props) {\r\n  const { title } = props;\r\n\r\n  return (\r\n    <HeaderWrapper>\r\n      <h3>{title}</h3>\r\n    </HeaderWrapper>\r\n  )\r\n})\r\n","import styled from 'styled-components';\r\n\r\nexport const PlayerSongsWrapper = styled.div`\r\n  .songs {\r\n    .song-item {\r\n      display: flex;\r\n      align-items: center;\r\n      margin-top: 15px;\r\n      width: 200px;\r\n\r\n      .image {\r\n        width: 50px;\r\n        height: 50px;\r\n      }\r\n\r\n      .info {\r\n        margin-left: 10px;\r\n        .name {\r\n          font-size: 14px;\r\n          color: #000;\r\n        }\r\n\r\n        .auchor {\r\n          color: #999;\r\n\r\n          .nickname {\r\n            color: #666;\r\n            margin-left: 5px;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`","import React, { memo, useEffect } from 'react';\r\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\r\n\r\nimport { getSizeImage } from '@/utils/format-utils';\r\n\r\nimport HYThemeHeaderPlayer from '@/components/theme-header-player';\r\nimport { PlayerSongsWrapper } from './style';\r\nimport { getSimiPlaylistAction } from '../../store/actionCreators';\r\n\r\nexport default memo(function HYPlayerSongs() {\r\n\r\n  // redux hooks\r\n  const { simiPlaylist = [] } = useSelector(state => ({\r\n    simiPlaylist: state.getIn([\"player\", \"simiPlaylist\"])\r\n  }), shallowEqual);\r\n  const dispatch = useDispatch();\r\n\r\n  // other hooks\r\n  useEffect(() => {\r\n    dispatch(getSimiPlaylistAction())\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <PlayerSongsWrapper>\r\n      <HYThemeHeaderPlayer title=\"包含这首歌的歌单\" />\r\n      <div className=\"songs\">\r\n        {\r\n          simiPlaylist.map((item, index) => {\r\n            return (\r\n              <div className=\"song-item\" key={item.id}>\r\n                <a className=\"image\" href=\"/#\">\r\n                  <img src={getSizeImage(item.coverImgUrl, 50)} alt=\"\" />\r\n                </a>\r\n                <div className=\"info text-nowrap\">\r\n                  <a href=\"#/\" className=\"name\">{item.name}</a>\r\n                  <div className=\"auchor\">\r\n                    by\r\n                    <a href=\"#/\" className=\"nickname\">{item.creator.nickname}</a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )\r\n          })\r\n        }\r\n      </div>\r\n    </PlayerSongsWrapper>\r\n  )\r\n})\r\n","import styled from 'styled-components';\r\n\r\nexport const RelevantWrapper = styled.div`\r\n  margin-top: 40px;\r\n\r\n  .songs {\r\n    .song-item {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      margin-bottom: 12px;\r\n\r\n      .info {\r\n        .title {\r\n          a {\r\n            color: #666;\r\n          }\r\n        }\r\n\r\n        .artist {\r\n          a {\r\n            color: #999;\r\n          }\r\n        }\r\n      }\r\n\r\n      .operate {\r\n        .item {\r\n          display: inline-block;\r\n          width: 10px;\r\n          height: 11px;\r\n        }\r\n\r\n        .play {\r\n          background-position: -69px -455px;\r\n          margin-right: 10px;\r\n        }\r\n\r\n        .add {\r\n          background-position: -87px -454px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`","import React, { memo, useEffect } from 'react';\r\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\r\n\r\nimport { getSimiSongAction } from '../../store/actionCreators';\r\n\r\nimport HYThemeHeaderPlayer from '@/components/theme-header-player';\r\nimport { RelevantWrapper } from './style';\r\n\r\nexport default memo(function HYRelevant() {\r\n  const { simiSongs = [] } = useSelector(state => ({\r\n    simiSongs: state.getIn([\"player\", \"simiSongs\"])\r\n  }), shallowEqual);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getSimiSongAction());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <RelevantWrapper>\r\n      <HYThemeHeaderPlayer title=\"相似歌曲\" />\r\n      <div className=\"songs\">\r\n        {\r\n          simiSongs.map((item, index) => {\r\n            return (\r\n              <div className=\"song-item\" key={item.id}>\r\n                <div className=\"info\">\r\n                  <div className=\"title\">\r\n                    <a href=\"#/\">{item.name}</a>\r\n                  </div>\r\n                  <div className=\"artist\">\r\n                    <a href=\"#/\">{item.artists[0].name}</a>\r\n                  </div>\r\n                </div>\r\n                <div className=\"operate\">\r\n                  <button className=\"item sprite_icon3 play\"></button>\r\n                  <button className=\"item sprite_icon3 add\"></button>\r\n                </div>\r\n              </div>\r\n            )\r\n          })\r\n        }\r\n      </div>\r\n    </RelevantWrapper>\r\n  )\r\n})\r\n","import styled from 'styled-components';\r\n\r\nexport const PlayerWrapper = styled.div`\r\n  .content {\r\n    background: url(${require(\"@/assets/img/wrap-bg.png\")}) repeat-y;\r\n    background-color: #fff;\r\n    display: flex;\r\n  }\r\n`\r\n\r\nexport const PlayerLeft = styled.div`\r\n  width: 710px;\r\n`\r\n\r\nexport const PlayerRight = styled.div`\r\n  width: 270px;\r\n  padding: 20px 40px 40px 30px;\r\n`\r\n","import React, { memo } from 'react'\r\n\r\nimport HYPlayerInfo from './c-cpns/player-info';\r\nimport HYPlayerComment from './c-cpns/player-comment';\r\nimport HYPlayerSongs from './c-cpns/player-songs';\r\nimport HYPlayerRelevant from './c-cpns/player-relevant';\r\n\r\nimport {\r\n  PlayerWrapper,\r\n  PlayerLeft,\r\n  PlayerRight\r\n} from './style'\r\nconst YPlayer = memo(() => {\r\n  return (\r\n    <PlayerWrapper>\r\n      <div className=\"content wrap-v2\">\r\n        <PlayerLeft>\r\n          <HYPlayerInfo />\r\n          <HYPlayerComment />\r\n        </PlayerLeft>\r\n        <PlayerRight>\r\n          <HYPlayerSongs />\r\n          <HYPlayerRelevant />\r\n        </PlayerRight>\r\n      </div>\r\n    </PlayerWrapper>\r\n  )\r\n})\r\n\r\nexport default YPlayer"],"names":["SongOperationBarWrapper","styled","require","memo","props","info","subscribedCount","shareCount","commentCount","className","InfoWrapper","InfoLeft","InfoRight","isSpread","useState","setIsSpread","useSelector","state","currentSong","getIn","lyricList","shallowEqual","totalLyricCount","length","picUrl","al","singerName","ar","name","albumName","src","getSizeImage","alt","href","slice","map","item","index","content","time","onClick","e","HeaderWrapper","title","PlayerSongsWrapper","simiPlaylist","dispatch","useDispatch","useEffect","getSimiPlaylistAction","coverImgUrl","creator","nickname","id","RelevantWrapper","simiSongs","getSimiSongAction","artists","PlayerWrapper","PlayerLeft","PlayerRight"],"sourceRoot":""}