{"version":3,"file":"static/js/405.6a7f3a46.chunk.js","mappings":"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","sources":["components/song-operation-bar/style.js","components/song-operation-bar/index.js","services/ranking.js","pages/discover/c-pages/ranking/store/actionCreators.js","pages/discover/c-pages/ranking/c-cpms/ranking-hot/style.js","pages/discover/c-pages/ranking/c-cpms/ranking-hot/index.js","pages/discover/c-pages/ranking/c-cpms/ranking-header/style.js","pages/discover/c-pages/ranking/c-cpms/ranking-header/index.js","pages/discover/c-pages/ranking/style.js","pages/discover/c-pages/ranking/c-cpms/ranking-list/style.js","pages/discover/c-pages/ranking/c-cpms/ranking-list/index.js","pages/discover/c-pages/ranking/index.js"],"sourcesContent":["import styled from 'styled-components'\r\n\r\nexport const SongOperationBarWrapper = styled.div`\r\n\r\n&.operation{\r\n    display: flex;\r\n    span, i{\r\n        height: 31px;\r\n    }\r\n    .item{\r\n      display: inline-block;\r\n      height: 31px;\r\n      margin-right: 10px;\r\n    }\r\n    /* 到底有什么难的？慌里慌张 */\r\n    /* 播放与添加样式 */\r\n    .play-add{\r\n      display: flex;\r\n      align-items: center;\r\n      background-color: antiquewhite;\r\n      background-image: url(${require('@/assets/img/sprite_button.png')});\r\n      background-position: 0 -387px;\r\n      margin-right: 5px;\r\n      .play{\r\n        display: flex;\r\n        align-items: center;\r\n        padding: 0 8px;\r\n        font-size: 12px;\r\n        span.play-text{\r\n          line-height: 31px;\r\n          color: #fff;\r\n        }\r\n        i.play-icon{\r\n          display: inline-block;\r\n          width: 20px;\r\n          height: 18px;\r\n          background-image: url(${require('@/assets/img/sprite_button.png')});\r\n          background-position: 0 -1622px;\r\n          margin: -2px 2px 0;\r\n        }\r\n      }\r\n      .add{\r\n        display: inline-block;\r\n        height: 31px;\r\n        width: 31px;\r\n        background-image: url(${require('@/assets/img/sprite_button.png')});\r\n        background-position: 0 -1588px;\r\n        text-indent: -9999px;\r\n      }\r\n    }\r\n    /* 订阅 分享 下载 收藏 评论共用样式 */\r\n    .icon-btn{\r\n      display: inline-block;\r\n      height: 31px;\r\n      margin-right: 6px;\r\n      padding-right: 4px;\r\n      background-image: url(${require('@/assets/img/sprite_button.png')});\r\n      background-position: right -1020px;\r\n      .icon{\r\n        display: inline-block;\r\n        line-height: 31px;\r\n        padding: 0 7px 0 28px;\r\n        background-image: url(${require('@/assets/img/sprite_button.png')});\r\n        background-position: 0 -977px;\r\n        font-family: simsun;\r\n      }\r\n    }\r\n\r\n    .share-icon.icon{\r\n      background-position: 0 -1225px;\r\n    }\r\n\r\n    .download-icon.icon{\r\n      background-position: 0 -2761px;\r\n    }\r\n\r\n    .comment-icon.icon{\r\n      background-position: 0 -1465px;\r\n    }\r\n  }\r\n \r\n`","import React, { memo } from 'react'\r\nimport {\r\n  SongOperationBarWrapper\r\n} from './style'\r\n\r\nexport default memo(function YSongOperationBar(props) {\r\n  // const { coverImgUrl, name, updateTime, subscribedCount,\r\n  //   shareCount, commentCount, playCount, trackCount } = props.info;\r\n  const { subscribedCount,\r\n    shareCount, commentCount } = props.info ? props.info : props;\r\n  return (\r\n    <SongOperationBarWrapper className=\"operation\">\r\n      {/* 播放与添加 */}\r\n      <span className='item play-add'>\r\n        <span className='play'>\r\n          <i className='play-icon'></i>\r\n          <span className='play-text'>播放</span>\r\n        </span>\r\n        <span className='add'>+</span>\r\n      </span>\r\n      {/* 订阅 */}\r\n      <span className='item subscribed icon-btn'>\r\n        <i className='subscribed-icon icon'> ({subscribedCount})</i>\r\n      </span>\r\n\r\n      {/* 分享 */}\r\n      <span className='item share icon-btn'>\r\n        <i className='share-icon icon'> ({shareCount})</i>\r\n      </span>\r\n\r\n      {/* 下载 */}\r\n      <span className='item download icon-btn'>\r\n        <i className='download-icon icon'>下载</i>\r\n      </span>\r\n\r\n      {/* 评论 */}\r\n      <span className='item comment icon-btn'>\r\n        <i className='comment-icon icon'> ({commentCount})</i>\r\n      </span>\r\n\r\n\r\n    </SongOperationBarWrapper>\r\n  )\r\n})\r\n","import request from \"./request\";\r\n\r\n// 获取榜单列表\r\nexport function getTopList() {\r\n  return request({\r\n    url: \"/toplist\"\r\n  })\r\n}\r\n\r\n// 获取榜单详情\r\nexport function getRankingList(id) {\r\n  return request({\r\n    url: \"/playlist/detail\",\r\n    params: {\r\n      id\r\n    }\r\n  })\r\n}","\r\nimport * as actionTypes from './constans'\r\nimport {\r\n  getTopList\r\n} from '@/services/ranking'\r\nimport { getRankingList } from '@/services/ranking';\r\n\r\n\r\nconst changeTopListAction = (topList) => ({\r\n  type: actionTypes.CHANGE_TOP_LIST,\r\n  topList: topList\r\n})\r\n\r\n// 左侧的榜单\r\nexport function getTopListAction() {\r\n  return (dispatch) => {\r\n    getTopList().then(res => {\r\n      // console.log('getTopListAction==>', res);\r\n      res && res.code === 200 && res.list\r\n        && dispatch(changeTopListAction(res.list));\r\n\r\n    }).catch(err => {\r\n      console.error('getTopListAction==>', err);\r\n    });\r\n  }\r\n}\r\n\r\nconst changePlayListAction = (playList) => ({\r\n  type: actionTypes.CHANGE_PLAY_LIST,\r\n  playList\r\n})\r\n\r\n// 右侧的歌曲列表 包含header-list\r\nexport const getRankingListAction = (id = 19723756) => {\r\n  return (dispatch) => {\r\n    getRankingList(id).then(res => {\r\n      // console.log('getRankingListAction==>', res);\r\n      res && res.code === 200 && res.playlist\r\n        && dispatch(changePlayListAction(res.playlist));\r\n    }).catch(err => {\r\n      console.error('getRankingListAction=>', err);\r\n    });\r\n  }\r\n}\r\n\r\nexport const changeCurrentListId = (id) => ({\r\n  type: actionTypes.CHANGE_CURRENT_LIST_ID,\r\n  currentListId: id\r\n})","import styled from 'styled-components'\r\n\r\nexport const HotRankingWrapper = styled.div`\r\n  margin-top: 25px;\r\n  border: 1px solid #d3d3d3;\r\n  border-top: none;\r\n  border-bottom: none;\r\n\r\n  .haeder{\r\n    padding: 12px 12px 10px;\r\n    font-size: 14px;\r\n    color: #000;\r\n    font-family: simsun;\r\n  }\r\n\r\n  .item-top{\r\n    display: flex;\r\n    padding: 8px 18px;\r\n    background-color: #f5f5f5;\r\n    &:hover,\r\n    &.active{\r\n      background-color: #e6e6e6;\r\n    }\r\n    .item-img{\r\n      width: 40px;\r\n      height: 40px;\r\n    }\r\n    .item-info{\r\n      margin-left: 12px;\r\n      .item-name{\r\n        font-size:12px;\r\n        color: #000000;\r\n      }\r\n      .item-update{\r\n        font-size:12px;\r\n        color: #999999;\r\n        margin-top: 5px;\r\n      }\r\n    }\r\n  }\r\n`;","import React, { Fragment, memo, useEffect } from 'react'\r\nimport classNames from 'classnames'\r\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { changeCurrentListId, getRankingListAction, getTopListAction } from '../../store/actionCreators';\r\n\r\nimport {\r\n  getSizeImage\r\n} from '@/utils/format-utils'\r\n\r\nimport {\r\n  HotRankingWrapper\r\n} from './style'\r\nexport default memo(function YHotRanking() {\r\n  // state\r\n\r\n  // redux hooks\r\n  const dispatch = useDispatch();\r\n  //在渲染之前，拿数据\r\n  const { topList = [], currentListId } = useSelector(state => {\r\n    return {\r\n      topList: state.getIn(['ranking', 'topList']),\r\n      currentListId: state.getIn(['ranking', 'currentListId'])\r\n    }\r\n  }, shallowEqual);\r\n\r\n  // other hooks\r\n  useEffect(() => {\r\n    // console.log('------  topList - 发起请求');\r\n    dispatch(getTopListAction());\r\n  }, [dispatch]);\r\n\r\n  // func code\r\n  // console.log('左侧 hotTop重新渲染...');\r\n  function handleClickItem(id) {\r\n    dispatch(getRankingListAction(id));\r\n    dispatch(changeCurrentListId(id));\r\n  }\r\n\r\n\r\n  return (\r\n    <HotRankingWrapper>\r\n      {\r\n        topList.map((item, index) => {\r\n          let header;\r\n          if (index === 0 || index === 4) {\r\n            header = (\r\n              <div className='haeder'>\r\n                {index === 0 ? '云音乐特色榜' : '全球媒体榜'}\r\n              </div>\r\n            )\r\n          }\r\n          return (\r\n            <Fragment key={item.id}>\r\n              {header}\r\n              <div className={classNames('item-top', { 'active': currentListId === item.id })}\r\n                key={item.id} onClick={e => handleClickItem(item.id)}>\r\n                <img className='item-img' src={getSizeImage(item.coverImgUrl, 40)} alt=\"\" />\r\n                <div className=\"item-info\">\r\n                  <div className=\"item-name\">{item.name}</div>\r\n                  <div className=\"item-update\">{item.updateFrequency}</div>\r\n                </div>\r\n              </div>\r\n            </Fragment>\r\n\r\n          )\r\n        })\r\n      }\r\n    </HotRankingWrapper>\r\n  )\r\n})\r\n","import styled from 'styled-components'\r\n\r\nexport const RankingHeaderWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding:40px;\r\n  .cover-img{\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border:1px solid #cccccc;\r\n    width: 158px;\r\n    height: 158px;\r\n    position: relative;\r\n    img{\r\n    width: 150px;\r\n    height: 150px;\r\n    }\r\n    .image_cover{\r\n      display: inline-block;\r\n      width: 150px;\r\n      height: 150px;\r\n      background-position: -230px -380px;\r\n    }\r\n  }\r\n\r\n  .info{\r\n    margin-left: 30px;\r\n    .name{\r\n      color: #333;\r\n      font-size: 20px;\r\n    }\r\n    .date{\r\n      margin: 8px 0 30px;\r\n      .clock{\r\n        position: relative;\r\n        display: inline-block;\r\n        width: 13px;\r\n        height: 13px;\r\n        margin-right: 4px;\r\n        top: 2px;\r\n        background-position: -18px -682px;\r\n      }\r\n      .update{\r\n        color: #999;\r\n      }\r\n    }\r\n  }\r\n\r\n`;","import React, { memo, useEffect } from 'react'\r\nimport { shallowEqual, useSelector } from 'react-redux';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport {\r\n  getSizeImage,\r\n  formatMonthDay\r\n} from '@/utils/format-utils'\r\nimport { getRankingListAction } from '../../store/actionCreators';\r\n\r\n\r\nimport YSongOperationBar from '@/components/song-operation-bar';\r\n\r\nimport {\r\n  RankingHeaderWrapper\r\n} from './style';\r\n\r\nexport default memo(function YRankingHeader() {\r\n\r\n  // redux hooks\r\n  const dispatch = useDispatch();\r\n  const { playList = {} } = useSelector(state => ({\r\n    playList: state.getIn(['ranking', 'playList']),\r\n  }), shallowEqual);\r\n  // other hooks\r\n  useEffect(() => {\r\n    // console.log('------ 发起Rankinglist请求',);\r\n    dispatch(getRankingListAction());\r\n  }, [dispatch]);\r\n  const { coverImgUrl, name, updateTime/* , subscribedCount,\r\n    shareCount, commentCount, playCount, trackCount  */} = playList;\r\n\r\n  // console.log('右侧 header重新渲染...');\r\n  return (\r\n    <RankingHeaderWrapper>\r\n      <div className='cover-img'>\r\n        <img src={getSizeImage(coverImgUrl, 150)} alt=\"\" />\r\n        <span className='image_cover'></span>\r\n      </div>\r\n      <div className=\"info\">\r\n        <h3 className='name'>{name}</h3>\r\n        <div className='date'>\r\n          <i className='clock sprite_icon2'></i>\r\n          最近更新：{formatMonthDay(updateTime)}\r\n          <span className='update'>(每日更新:TODO)</span>\r\n        </div>\r\n        <YSongOperationBar info={playList} />\r\n\r\n      </div>\r\n    </RankingHeaderWrapper>\r\n  )\r\n})\r\n","import styled from 'styled-components'\r\n\r\nexport const RankingWrapper = styled.div`\r\n  display: flex;\r\n  \r\n`;\r\n\r\nexport const RankingLeftWrapper = styled.div`\r\n  width: 240px;\r\n  /* padding: 25px; */\r\n  \r\n  border: 1px solid #d3d3d3;\r\n  `;\r\n\r\nexport const RankingRightWrapper = styled.div`\r\n  width: 740px;\r\n  background-color: #fafafa;;\r\n\r\n`;","import styled from 'styled-components';\r\n\r\nexport const RankingListSwrapper = styled.div`\r\n  padding: 0 40px;\r\n  .header{\r\n    display: flex;\r\n    justify-content: space-between;\r\n    border-bottom: 2px solid #c20c0c;\r\n    padding-bottom: 4px;\r\n    .left{\r\n      display: flex;\r\n      align-items: center;\r\n      .sing-title{\r\n        font-size: 20px;\r\n        font-weight: 500;\r\n        color: #333;\r\n      }\r\n      .sing-count{\r\n        margin-left: 12px;\r\n        font-size: 12px;\r\n        color: #333;\r\n      }\r\n    }\r\n    .right{\r\n      .count{\r\n        color: #c31414;\r\n        margin-right: 6px;\r\n      }\r\n    }\r\n  }\r\n\r\n  .list{\r\n    border: 1px solid #d9d9d9;\r\n    border-top: none;\r\n    table{\r\n      width: 100%;\r\n      thead{\r\n        background-color: #f5f5f5;\r\n      }\r\n      .sing-top{\r\n        text-align: left;\r\n        line-height: 34px;\r\n        border-bottom: 2px solid #d4d4d4;\r\n        th{\r\n          border-right: 2px solid #dcdcdc;\r\n          color:#666666;\r\n          font-weight: 400;\r\n          padding-left: 8px;\r\n        }\r\n      }\r\n\r\n      .sing-item:nth-child(2n+1){\r\n        background-color: #f7f7f7;\r\n      }\r\n\r\n      .sing-item:nth-child(2n){\r\n        background-color: #fff;\r\n      }\r\n      /* th td公共样式 */\r\n      .sing-item,\r\n      .sing-top{\r\n        display: flex;\r\n        font-size: 12px;\r\n          .sing-id{\r\n            flex:1;\r\n          }\r\n          .sing-time{\r\n            flex:1;\r\n          }\r\n          .sing-singer{\r\n            flex: 2;\r\n          }\r\n          .sing-title{\r\n            flex:4;\r\n          }\r\n        }\r\n\r\n      .sing-item{\r\n          box-sizing: border-box;\r\n        .sing-id{\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n          text-align: center;\r\n          box-sizing: border-box;\r\n\r\n        }\r\n        i.new{\r\n            display: inline-block;\r\n            width: 16px;\r\n            height: 17px;\r\n            margin-left: 12px;\r\n            background-position: -67px -283px;\r\n          }\r\n        .sing-title{\r\n          .info{\r\n            display: flex;\r\n            align-items: center;\r\n            padding: 10px;\r\n            img{\r\n              width: 50px;\r\n              height: 50px;\r\n            }\r\n            .name-alias{\r\n              width: 200px;\r\n              margin-left: 12px;\r\n              font-size: 12px;\r\n              .name{\r\n                color:#333333;\r\n              }\r\n              .alias{\r\n                margin-left: 12px;\r\n                color: #aeaeae;\r\n              }\r\n              .play{\r\n                display: inline-block;\r\n                width: 17px;\r\n                height: 17px;\r\n                background-position: 0 -103px;\r\n                margin-right: 8px;\r\n                position: relative;\r\n                top: 4px;\r\n                cursor: pointer;\r\n                &:hover{\r\n                  background-position: 0 -128px;\r\n                }\r\n              }\r\n            }\r\n          }\r\n          \r\n        }\r\n\r\n        .sing-time{\r\n          display: flex;\r\n          align-items: center;\r\n        }\r\n        .sing-singer{\r\n          display: flex;\r\n          align-items: center;\r\n        }\r\n      }\r\n       \r\n    }\r\n  }\r\n\r\n`;","import React, { memo } from 'react'\r\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux'\r\n\r\nimport {\r\n  getSizeImage,\r\n  formatMinuteSecond,\r\n  getCount\r\n} from '@/utils/format-utils'\r\nimport {\r\n  getSongDetailAction\r\n} from '../../../../../player/store/'\r\n\r\nimport {\r\n  RankingListSwrapper\r\n} from './style'\r\nexport default memo(function YRankingList() {\r\n\r\n  // state\r\n\r\n  // redux hooks\r\n  const dispatch = useDispatch();\r\n\r\n  const { playList: { tracks = [], trackCount, playCount } } = useSelector(state => ({\r\n    playList: state.getIn(['ranking', 'playList'])\r\n  }), shallowEqual);\r\n\r\n  // func code\r\n  // 点击歌曲子项的播放按钮，判断当前的列表中是否需存在该首歌曲\r\n  // 如果存在，就把当前播放索引设置为当前歌曲\r\n  // 如果在集合中不存在，则发起获取该音乐的请求，把该首音乐添加到列表中\r\n  // 并把当前播放的索引设置为当前的这首歌曲的下标位置\r\n  const playMusic = (id) => {\r\n    dispatch(getSongDetailAction(id));\r\n  }\r\n  // console.log('右侧 list重新渲染...');\r\n  return (\r\n    <RankingListSwrapper>\r\n      <div className=\"header\">\r\n        <div className=\"left\">\r\n          <h3 className='sing-title'>歌曲列表</h3>\r\n          <span className='sing-count'>{trackCount}首歌曲</span>\r\n        </div>\r\n        <div className=\"right\">\r\n          播放量：<span className=\"count\"> {getCount(playCount)} </span>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"list\">\r\n        <table>\r\n          <thead>\r\n            <tr className='sing-top'>\r\n              <th className='sing-id'></th>\r\n              <th className='sing-title'>标题</th>\r\n              <th className='sing-time'>时常</th>\r\n              <th className='sing-singer'>歌手</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {\r\n              tracks.map((item, index) => {\r\n                return (\r\n                  <tr key={item.id} className='sing-item'>\r\n                    <td className='sing-id'>\r\n                      <span>{index + 1}</span>\r\n                      <i className='new sprite_icon2'></i>\r\n                    </td>\r\n                    <td className='sing-title'>\r\n                      <div className='info'>\r\n                        {\r\n                          index < 3 ? (<img src={getSizeImage(item.al.picUrl, 50)} alt=\"\" />) : null\r\n                        }\r\n                        <div className=\"name-alias text-nowrap\">\r\n                          <i className='play sprite_table' onClick={e => playMusic(item.id)}></i>\r\n                          <span className='name'>{item.name}</span>\r\n                          <span className='alias'>{item.alia[0]}</span>\r\n                        </div>\r\n                      </div>\r\n                    </td>\r\n                    <td className='sing-time'>{formatMinuteSecond(item.dt)}</td>\r\n                    <td className='sing-singer'>{item.ar[0].name}</td>\r\n                  </tr>\r\n                )\r\n              })\r\n            }\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </RankingListSwrapper>\r\n  )\r\n})\r\n","import React, { memo } from 'react'\r\nimport YRankingHot from './c-cpms/ranking-hot';\r\nimport YRankingHeader from './c-cpms/ranking-header';\r\nimport {\r\n  RankingWrapper,\r\n  RankingRightWrapper,\r\n  RankingLeftWrapper\r\n} from './style';\r\nimport YRankingList from './c-cpms/ranking-list';\r\nexport default memo(function YRanking() {\r\n  return (\r\n    <RankingWrapper className='wrap-v2'>\r\n\r\n      <RankingLeftWrapper>\r\n        <YRankingHot />\r\n      </RankingLeftWrapper>\r\n\r\n\r\n      <RankingRightWrapper>\r\n        <YRankingHeader />\r\n        <YRankingList />\r\n      </RankingRightWrapper>\r\n\r\n    </RankingWrapper>\r\n  )\r\n})\r\n"],"names":["SongOperationBarWrapper","styled","require","memo","props","info","subscribedCount","shareCount","commentCount","className","getRankingList","id","request","url","params","getTopListAction","dispatch","then","res","topList","code","list","type","actionTypes","catch","err","console","error","changePlayListAction","playList","getRankingListAction","playlist","HotRankingWrapper","useDispatch","useSelector","state","getIn","currentListId","shallowEqual","handleClickItem","changeCurrentListId","useEffect","map","item","index","header","Fragment","classNames","onClick","e","src","getSizeImage","coverImgUrl","alt","name","updateFrequency","RankingHeaderWrapper","updateTime","formatMonthDay","RankingWrapper","RankingLeftWrapper","RankingRightWrapper","RankingListSwrapper","tracks","trackCount","playCount","getCount","al","picUrl","getSongDetailAction","alia","formatMinuteSecond","dt","ar"],"sourceRoot":""}